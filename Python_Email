import os
import win32com.client as win32
import logging
import pandas as pd

# set up logging
logging.basicConfig(filename='email_script.log', level=logging.DEBUG)

# constants
SUBJECT = "Tolddeklarationsoversigt {} ({})"
ATTACHMENT_NAME = "{} Tolddeklarationsoversigt.txt"
ROOT_DIR = "C:\\Users\\soffe\\Desktop\\"
BODY = "Template2"

date = "2023 01" # --------------------------------------------------------- NEEDS TO BE CHANGED MONTHLY
month = "januar" # --------------------------------------------------------- NEEDS TO BE IN DANISH AND WITH ALL TEXT IN LOWERCASE

# read configuration data from an excel file using pandas
df = pd.read_excel("clients.xlsx")
CLIENTS = [(str(row['VAT']), row['Name'], row['Folder']) for i, row in df.iterrows()]

# create outlook application instance
olApp = win32.Dispatch('Outlook.Application')
olNS = olApp.GetNameSpace('MAPI')

def create_mail_item():
    """Creates a new mail item in Outlook"""
    mailItem = olApp.CreateItem(0)
    mailItem.BodyFormat = 1
    mailItem.Sensitivity  = 2
    return mailItem

def find_path(name, path):
    """Searches for a file in the specified path and returns its full path"""
    for root, dirs, files in os.walk(path):
        if name in dirs or name in files:
            return root
    return None

def send_email(client, date):
    """Sends an email with an attachment to the specified client"""
    found = False
    for record in CLIENTS:
        if client == record[0]:
            client_name = record[1]
            folder_name = record[2]
            found = True

            target_path = find_path(ATTACHMENT_NAME.format(date), ROOT_DIR + folder_name)
            if target_path:
                mailItem = create_mail_item()
                mailItem.Subject = SUBJECT.format(date, client_name)
                attachment = (target_path + "\\" + ATTACHMENT_NAME.format(date))
                mailItem.Attachments.Add(attachment)
                mailItem.HTMLBody = BODY

                choice = input("Do you want to display or send the email? ")
                if choice.lower() == "display":
                    mailItem.Display()
                elif choice.lower() == "send":
                    mailItem.Send()
                else:
                    print("Invalid choice. Try again.")
                    return
            else:
                print(f"{ATTACHMENT_NAME.format(date)} not found.")
                logging.error(f"{ATTACHMENT_NAME.format(date)} not found in {ROOT_DIR + folder_name}")
                return
            break

    if not found:
        print(f"Client with VAT number {client} not found.")
        logging.error(f"Client with VAT number {client} not found.")

# prompt user for client VAT number and date
client = input("Enter the VAT number of the client: ")

# send email to the specified client
send_email(client, date)
